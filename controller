import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import roomReserveSystem.loginDAO;
import roomReserveSystem.reservation;
import roomReserveSystem.reserveSearchDAO;
import roomReserveSystem.room;
import roomReserveSystem.roomDAO;
import roomReserveSystem.time;
import roomReserveSystem.timeDAO;
import roomReserveSystem.userInfoReserveDAO;
import roomReserveSystem.userInformation;

/**
 * Servlet implementation class controller
 */
@WebServlet("/controller")
public class controller extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private HttpSession sessionVerify;
	List<room> listRoom= new ArrayList<room>();
	List<time> listTime= new ArrayList<time>();
	 int Year;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public controller() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	
		 
        //System.out.println("selectedTopic = "+selectedTopic);

		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
		request.setCharacterEncoding("UTF-8");
	    sessionVerify = request.getSession(false);  
		if(("index").equals(request.getParameter("nPage"))){
			if(("login").equals(request.getParameter("action"))){
				String empID=request.getParameter("empID");
				String pass=request.getParameter("pass");
				loginDAO login=new loginDAO();
				if(login.verifyLogin(empID, pass)){
					  HttpSession session=request.getSession();  
				      session.setAttribute("empName",login.getEmpName());  
				      session.setAttribute("empID",empID);  
				      request.getRequestDispatcher("/application.jsp").forward(request,response);
				}else{
					  request.getRequestDispatcher("/index.jsp").forward(request,response);
				}
			}
		}//loop login
		else if( sessionVerify.getAttribute("empID") != null){
			if(("logout").equals(request.getParameter("selectedTopic"))){
				HttpSession session=request.getSession();  
	            session.invalidate();  
	            request.getRequestDispatcher("/index.jsp").forward(request,response);
			}else if(("searchYYMM").equals(request.getParameter("selectedTopic"))){
				timeDAO times = new timeDAO();
		        listTime = times.getTimes();
		        roomDAO room=new roomDAO();
		        listRoom = room.getRoom();
		        Year = Calendar.getInstance().get(Calendar.YEAR);
		        /*for(int i=0;i<items.size();i++){
		        	System.out.println(items.get(i).getTimeID());
		        }*/
		        request.setAttribute("listTime",listTime); 
		        request.setAttribute("listRoom",listRoom); 
		        request.setAttribute("year",Year);
				request.getRequestDispatcher("/searchCondition2.jsp").forward(request,response);
			}else if(("searchConditon2").equals(request.getParameter("nPage"))){
				if(("search").equals(request.getParameter("action"))){
					//System.out.println(request.getParameter("time"));
					int selectedYear=Integer.parseInt(request.getParameter("year"));
					int selectedMonth=Integer.parseInt(request.getParameter("month"));
					int selectedRoom=Integer.parseInt(request.getParameter("room"));
					Calendar mycal = new GregorianCalendar(selectedYear, selectedMonth-1, 1);
					int daysInMonth = mycal.getActualMaximum(Calendar.DAY_OF_MONTH);// Get the number of days in that month
					int numTime=listTime.size();
					reserveSearchDAO result = new reserveSearchDAO();
				    result.setListItem(daysInMonth,listTime.size());
				    ArrayList<reservation>[][] listResult=result.getSearchYearMonth(selectedYear,selectedMonth,selectedRoom);
					request.setAttribute("listTime",listTime); 
				    request.setAttribute("listRoom",listRoom); 
				    request.setAttribute("selectedYear",selectedYear);
				    request.setAttribute("daysInMonth",daysInMonth);
				    request.setAttribute("selectedMonth",selectedMonth);
				    request.setAttribute("selectedRoom",selectedRoom);
				    request.setAttribute("numTime",numTime);
				    request.setAttribute("listResult",listResult);
					request.getRequestDispatcher("/searchCondition2.jsp").forward(request,response);
				}else if(("reserve").equals(request.getParameter("action"))){
					userInfoReserveDAO info=new userInfoReserveDAO();
					int selectedYear=Integer.parseInt(request.getParameter("YY"));
					int selectedMonth=Integer.parseInt(request.getParameter("MM"));
					int selectedDay=Integer.parseInt(request.getParameter("DD"));
					Calendar mycal = new GregorianCalendar(selectedYear, selectedMonth-1,selectedDay);
					SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
					String reserveDate= sdf.format(mycal.getTime());
					String empID=(String)sessionVerify.getAttribute("empID");
					List<userInformation> listEmp=info.getUserInfoReserve(empID);
					//request.setAttribute("listEmp",listEmp); 
					//request.setAttribute("reserveDate",reserveDate);
					//request.setAttribute("roomID",request.getParameter("roomID")); 
					//request.setAttribute("roomName",listRoom.get(Integer.parseInt(request.getParameter("roomID"))-1).getRoomName());
					//request.setAttribute("timeID",request.getParameter("timeID"));
					//request.setAttribute("timeName",listTime.get(Integer.parseInt(request.getParameter("timeID"))-1).getTimeName());
					//request.getRequestDispatcher("/reservation.jsp").forward(request,response);
				}
			}
		}//loop check session is not null
		else{
			request.getRequestDispatcher("/index.jsp").forward(request,response);  
		}//loop check session 
	
	}//loop doPost
}
